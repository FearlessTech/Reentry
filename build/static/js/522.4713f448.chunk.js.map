{"version":3,"file":"static/js/522.4713f448.chunk.js","mappings":"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","sources":["components/Messages/stylesMessaging.jsx","components/Messages/extensions/Message.js","components/Messages/extensions/ActorElement.js","components/Messages/customHooks/Padronizer.js","components/Messages/extensions/PrivateChat.jsx","components/Messages/extensions/Channel.jsx","components/Messages/index.js","components/Network/api/getCurrentUser.js","components/Posts/urlIdentifier.js","components/components/Image.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  max-width: 100%;\n  display: flex;\n  background-color: #cdcdcd;\n  overflow: hidden;\n  flex-wrap: wrap-reverse;\n  column-gap: 2rem;\n  row-gap: 2rem;\n  padding-top: 52px;\n  padding-left: 2rem;\n  padding-right: 2rem;\n  height: 100vh;\n  overflow: hidden;\n  @media (max-width: 768px) {\n    overflow: scroll;\n  }\n  &,\n  * {\n    font-family: Inter, sans-serif;\n    box-sizing: border-box;\n  }\n`;\n\nconst Messengers = styled.div`\n  // //\n  flex: 0 1 350px;\n  display: flex;\n  flex-direction: column;\n  background-color: #e9e9e9;\n  height: 85vh;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n\nconst MessengersHeader = styled.div`\n  display: flex;\n  width: 87%;\n  height: 10%;\n  margin: 20px 20px 0 20px;\n  background-color: #009999;\n  border-radius: 10px 10px 0 0;\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  h2 {\n    color: white;\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n\nconst ActorsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 20px 0 20px;\n  width: 87%;\n  height: 90%;\n  background-color: #cdcdcd;\n  overflow-x: hidden;\n  border-radius: 0 0 0 10px;\n  margin-bottom: 20px;\n  .actors {\n    display: flex;\n    flex-direction: column;\n    row-gap: 0.7rem;\n    margin: 0.7rem 0;\n  }\n`;\n\nconst Messages = styled.div`\n  // //\n  flex: 8 1 250px;\n  width: 750px;\n  display: flex;\n  flex-direction: column;\n  background-color: #e9e9e9;\n  height: 85vh;\n  border-radius: 10px;\n  margin-bottom: 20px;\n`;\n\nconst MessagesHeader = styled.div`\n  display: flex;\n  height: 10%;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  margin-top: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #009999;\n  align-items: center;\n  padding-left: 1rem;\n  h2 {\n    color: white;\n    font-size: 20px;\n    font-weight: 600;\n  }\n`;\n\nconst SelectedAct = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  margin-left: 20px;\n  margin-right: 20px;\n  height: 65%;\n  background-color: #cdcdcd;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  flex-wrap: wrap;\n  .messages-node {\n    margin-left: 1rem;\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    row-gap: 1rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Reply = styled.div`\n  margin: 20px;\n  padding: 0.5rem;\n  max-width: 100%;\n  background-color: #009999;\n  border-bottom-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  display: flex;\n  flex-wrap: wrap;\n\n  form {\n    max-width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    input {\n      flex: 8 1 270px;\n      height: 75px;\n      border: none;\n      transition: 100ms ease-in-out;\n      padding: 1rem;\n      &:focus,\n      &:focus-visible,\n      &:focus-within {\n        outline: none;\n        transform: scaleY(1.05);\n        transform: scaleX(1.004);\n      }\n    }\n\n    button {\n      flex: 1 1 150px;\n      height: 75px;\n      border-radius: 10px;\n      background-color: #74d4d4;\n      font-size: 22px;\n      color: #ececec;\n      border: none;\n      outline: none;\n      &:focus,\n      &:focus-visible,\n      &:focus-within {\n        outline: none;\n        transform: scaleY(1.05);\n        transform: scaleX(1.004);\n      }\n      &[disabled] {\n        background-color: #ffffff38;\n      }\n    }\n  }\n`;\n\nconst ReplyText = styled.input`\n  margin: 10px;\n  width: 800px;\n  height: 80%;\n  background-color: #e9e9e9;\n  border-radius: 10px;\n`;\n\nexport {\n  Container,\n  Messengers,\n  MessengersHeader,\n  ActorsList,\n  Messages,\n  MessagesHeader,\n  SelectedAct,\n  Reply,\n  ReplyText,\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { UserImage } from \"../../components/Image\";\nimport { formatRelative } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport { isUrl, splitString, getExt } from \"../../Posts/urlIdentifier\";\n\nconst StMessage = styled.div`\n  .top {\n    display: flex;\n    column-gap: 0.6rem;\n    .image-wrapper {\n      width: 45px;\n      overflow: hidden;\n      display: grid;\n      place-items: center;\n      border-radius: 100vmax;\n      img {\n        width: 100%;\n      }\n    }\n    .meta {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      height: 45px;\n      padding-bottom: 0.2rem;\n      .name {\n        font-weight: 600;\n        color: #074453;\n        text-decoration: none;\n      }\n      .date {\n        font-size: 12px;\n      }\n    }\n  }\n  .text {\n    padding-left: 3.4rem;\n    font-size: 15px;\n    .image-wrapper {\n      width: 150px;\n      img {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst Message = ({\n  createdAt = null,\n  text = \"\",\n  displayName = \"\",\n  photoURL = \"\",\n  uid = \"\",\n}) => {\n  const textList = [];\n\n  splitString(text).forEach((word) => {\n    if (isUrl(word)) {\n      if (getExt(word)) {\n        return textList.push({ image: true, text: word, url: true });\n      }\n      return textList.push({ image: false, text: word, url: true });\n    }\n    return textList.push({ image: false, text: word, url: false });\n  });\n\n  return (\n    <StMessage>\n      <div className=\"top\">\n        <div className=\"image-wrapper\">\n          <UserImage source={photoURL} />\n        </div>\n        <div className=\"meta\">\n          {displayName ? (\n            <Link className=\"name\" to={`/messaging/${uid}`}>\n              {displayName}\n            </Link>\n          ) : null}\n          {createdAt?.seconds ? (\n            <span className=\"date\">\n              {formatRelative(new Date(createdAt.seconds * 1000), new Date())}\n            </span>\n          ) : null}\n        </div>\n      </div>\n      <div>\n        <div className=\"text\">\n          {textList.map((word, i) => (\n            <React.Fragment key={i}>\n              {word.image ? (\n                <>\n                  <a href={word.text} target=\"_blank\">\n                    <div className=\"image-wrapper\">\n                      <img\n                        src={word.text}\n                        alt=\"\"\n                        onError={(e) => {\n                          e.target.remove();\n                        }}\n                      />\n                    </div>\n                  </a>{\" \"}\n                </>\n              ) : word.url ? (\n                <>\n                  <a href={word.text} target=\"_blank\">\n                    {word.text}\n                  </a>{\" \"}\n                </>\n              ) : (\n                <>{word.text} </>\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </StMessage>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { UserImage } from \"../../components/Image\";\n\nconst StActorElement = styled.div`\n  a {\n    display: flex;\n    column-gap: 1rem;\n    align-items: flex-start;\n    padding-top: 0.2rem;\n    background-color: #d5d5d5;\n    padding: 0.2rem 0.8rem;\n    text-decoration: none;\n    .image-wrapper {\n      width: 60px;\n      overflow: hidden;\n      border-radius: 100vmax;\n      display: grid;\n      place-items: center;\n      img {\n        width: 100%;\n      }\n    }\n    .right {\n      display: flex;\n      flex-direction: column;\n      row-gap: 0.2rem;\n      .name {\n        font-size: 14px;\n        font-weight: 600;\n        color: #074453;\n      }\n      .last {\n        span {\n          font-size: 12px;\n          color: #545454;\n        }\n      }\n    }\n  }\n`;\n\nexport default function ActorElement({ name, photoURL, lastMessage, uid }) {\n  return (\n    <StActorElement>\n      <Link to={`/messaging/${uid}`}>\n        <div className=\"image-wrapper\">\n          <UserImage source={photoURL} />\n        </div>\n        <div className=\"right\">\n          <span className=\"name\">{name}</span>\n          <div className=\"last\">\n            <span>{lastMessage}</span>\n          </div>\n        </div>\n      </Link>\n    </StActorElement>\n  );\n}\n","import db from \"../../../firebase\";\nimport firebase from \"firebase\";\n\nexport default class Padronizer {\n  constructor(sample1, sample2) {\n    this.sample1 = sample1;\n    this.sample2 = sample2;\n    this.result = null;\n  }\n\n  is_numeric(str) {\n    return /^\\d+$/.test(str);\n  }\n\n  getNums(sample) {\n    sample = sample.split(\"\");\n    const numbers = sample.reduce((prev, char) => {\n      if (this.is_numeric(char)) return prev + Number(char);\n      else return char.charCodeAt(0);\n    }, 0);\n    return numbers;\n  }\n\n  padronize() {\n    const sample1 = this.getNums(this.sample1);\n    const sample2 = this.getNums(this.sample2);\n    const bigger = Math.max(sample1, sample2);\n    if (sample1 === bigger) this.result = this.sample1 + this.sample2;\n    else this.result = this.sample2 + this.sample1;\n  }\n}\n\nexport function generateChatId(sample1, sample2) {\n  const padronizer = new Padronizer(sample1, sample2);\n  padronizer.padronize();\n  return padronizer.result;\n}\n\nexport class Chat {\n  constructor(chatId) {\n    this.chatId = chatId;\n    this.chatPath = null;\n  }\n\n  async chatExists() {\n    const data = { exists: false, payload: null };\n    await db\n      .collection(\"chats\")\n      .doc(this.chatId)\n      .collection(\"chat\")\n      .get()\n      .then((payload) => {\n        if (!payload.empty) {\n          data.exists = true;\n          data.payload = payload;\n        }\n      });\n    return data;\n  }\n\n  async createChat(message) {\n    await db\n      .collection(\"chats\")\n      .doc(this.chatId)\n      .collection(\"chat\")\n      .add({\n        ...message,\n      })\n      .then((payload) => {\n        // console.log(payload);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  }\n}\n\nexport async function addReferenceTo(userid, ref) {\n  console.log(userid);\n  console.log(ref);\n  let newChats = [];\n  const user = await db\n    .collection(\"users\")\n    .where(\"uid\", \"==\", userid)\n    .get()\n    .then((payload) => {\n      const doc = payload.docs[0];\n      newChats = [...doc.data().chats];\n      return doc.ref;\n    });\n  newChats.push({\n    uid: ref.uid,\n    name: ref.name,\n    photoURL: ref.photoURL,\n  });\n  await user.update({\n    chats: newChats,\n  });\n}\n\nexport async function getUserFromId(uid) {\n  return await db\n    .collection(\"users\")\n    .where(\"uid\", \"==\", uid)\n    .get()\n    .then((payload) => {\n      return payload.docs[0].data();\n    });\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Message from \"./Message\";\nimport { useParams } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nimport {\n  generateChatId,\n  Chat,\n  addReferenceTo,\n  getUserFromId,\n} from \"../customHooks/Padronizer\";\n\nimport {\n  MessagesHeader,\n  SelectedAct,\n  Reply,\n  ReplyText,\n} from \"../stylesMessaging\";\n\nimport getCurrentUser from \"../../Network/api/getCurrentUser\";\n\nexport default function PrivateChat({ db = null }) {\n  const [newMessage, setNewMessage] = useState(\"\");\n  const scroller = useRef();\n  const params = useParams();\n  const [hasNew, setHasNew] = useState(null);\n  const [messages, setMessages] = useState(null);\n\n  let chatId = null;\n\n  useEffect(() => {\n    if (hasNew === false || !db) return;\n    let unsubscribe;\n    (async () => {\n      if (!chatId) {\n        const user = await getCurrentUser();\n        chatId = generateChatId(user.uid, params.uid);\n      }\n      return chatId;\n    })().then((chatId) => {\n      unsubscribe = db\n        .collection(\"chats\")\n        .doc(chatId)\n        .collection(\"chat\")\n        .orderBy(\"createdAt\")\n        .limit(50)\n        .onSnapshot((querySnapshot) => {\n          // Get all documents from collection ~ with IDs\n          const data = querySnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          // update state\n          setMessages(data);\n        });\n\n      // Detach listener\n      return unsubscribe;\n    });\n    setHasNew(false);\n  }, [db, hasNew]);\n\n  function handleOnSubmit(e) {\n    e.preventDefault();\n    if (!newMessage) return;\n    //\n    let user;\n    let target;\n    let dUser;\n\n    async function verifyMessages() {\n      try {\n        user = await getCurrentUser();\n        target = await getUserFromId(params.uid);\n        dUser = await getUserFromId(params.uid);\n        const chatID = generateChatId(user.uid, params.uid);\n        const chat = new Chat(chatID);\n\n        const { exists, payload } = await chat.chatExists();\n\n        if (exists) {\n          await chat.createChat({\n            text: newMessage,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          });\n        } else {\n          await chat.createChat({\n            text: newMessage,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          });\n          await addReferenceTo(user.uid, target);\n          await addReferenceTo(params.uid, dUser);\n        }\n      } catch (e) {\n        console.log(e.message);\n      }\n    }\n    verifyMessages();\n    setHasNew(() => true);\n    setNewMessage(() => \"\");\n  }\n\n  function handleOnChange(e) {\n    setNewMessage(e.target.value);\n  }\n\n  useEffect(() => {\n    try {\n      if (!scroller.current) return;\n      const element = scroller.current;\n      element.scrollTop = element.scrollHeight;\n    } catch (e) {\n      console.log(e.message);\n    }\n  }, []);\n\n  return (\n    <>\n      <MessagesHeader>\n        <h2>Advocates Chat Room</h2>\n      </MessagesHeader>\n      <SelectedAct ref={scroller}>\n        <ul className=\"messages-node\">\n          {messages &&\n            messages.map((message) => (\n              <li key={message.id}>\n                <Message {...message} />\n              </li>\n            ))}\n        </ul>\n      </SelectedAct>\n      <Reply>\n        <form onSubmit={handleOnSubmit}>\n          <ReplyText\n            type=\"text\"\n            value={newMessage}\n            onChange={handleOnChange}\n            id=\"myInput\"\n            placeholder=\"Type you message here...\"\n            autoComplete=\"off\"\n          />\n          <button type=\"submit\" disabled={!newMessage}>\n            Send\n          </button>\n        </form>\n      </Reply>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, Route, Switch as Routes, useParams } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport Message from \"./Message\";\nimport ActorElement from \"./ActorElement\";\nimport PrivateChat from \"./PrivateChat\";\n\nimport {\n  ActorsList,\n  Messages,\n  MessagesHeader,\n  Messengers,\n  MessengersHeader,\n  SelectedAct,\n  Reply,\n  ReplyText,\n} from \"../stylesMessaging\";\n\nconst Channel = ({ user = null, db = null }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const scroller = useRef();\n\n  const { uid, displayName, photoURL } = user;\n\n  useEffect(() => {\n    try {\n      if (!scroller.current) return;\n      const element = scroller.current;\n      element.scrollTop = element.scrollHeight;\n    } catch (e) {\n      console.log(e.message);\n    }\n  }, []);\n\n  const recent = [\n    {\n      name: \"Global chat\",\n      photoURL:\n        \"https://avatars.githubusercontent.com/u/122039071?s=400&u=71ad1243b64ff9fd68445f297c039a60ceaefd4a&v=4\",\n      lastMessage: \"Talk to everyone with the global chat\",\n      uid: \"\",\n    },\n    {\n      name: \"Ronnie Brito\",\n      photoURL:\n        \"https://lh3.googleusercontent.com/a/AEdFTp7nsy4yhLo0hOm2zpDjNedfHB9MMWcKej_ki9Rf=s96-c\",\n      lastMessage: \"It won't work\",\n      uid: \"hyHKDNi5S6O6bJkfJfkPVNt1qRA2\",\n    },\n    {\n      name: \"c137\",\n      photoURL: \"https://randomuser.me/api/portraits/women/8.jpg\",\n      lastMessage: \"Not dynamic yet\",\n      uid: \"EjFZKh5rxTgAAdqpJXmH0DAiT7s2\",\n    },\n  ];\n\n  useEffect(() => {\n    if (db) {\n      const unsubscribe = db\n        .collection(\"messages\")\n        .orderBy(\"createdAt\")\n        .limit(100)\n        .onSnapshot((querySnapshot) => {\n          // Get all documents from collection ~ with IDs\n          const data = querySnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          // update state\n          setMessages(data);\n        });\n\n      // Detach listener\n      return unsubscribe;\n    }\n  }, [db]);\n\n  const handleOnChange = (e) => {\n    setNewMessage(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (db) {\n      db.collection(\"messages\")\n        .add({\n          text: newMessage,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n          uid,\n          displayName,\n          photoURL,\n        })\n        .then(() => {\n          setNewMessage(() => {\n            return \"\";\n          });\n        });\n    }\n  };\n\n  return (\n    <>\n      <Messengers>\n        <MessengersHeader>\n          <h2>Users Messages</h2>\n        </MessengersHeader>\n        <ActorsList>\n          <ul className=\"actors\">\n            {recent.map((user, i) => {\n              return (\n                <ActorElement\n                  name={user.name}\n                  photoURL={user.photoURL}\n                  lastMessage={user.lastMessage}\n                  uid={user.uid}\n                  key={user.uid + i}\n                />\n              );\n            })}\n          </ul>\n        </ActorsList>\n      </Messengers>\n\n      <Messages>\n        <Routes>\n          <Route exact path=\"/messaging\">\n            <MessagesHeader>\n              <h2>Advocates Chat Room</h2>\n            </MessagesHeader>\n            <SelectedAct ref={scroller}>\n              <ul className=\"messages-node\">\n                {messages.map((message) => (\n                  <li key={message.id}>\n                    <Message {...message} />\n                  </li>\n                ))}\n              </ul>\n            </SelectedAct>\n            <Reply>\n              <form onSubmit={handleOnSubmit}>\n                <ReplyText\n                  type=\"text\"\n                  value={newMessage}\n                  onChange={handleOnChange}\n                  id=\"myInput\"\n                  placeholder=\"Type you message here...\"\n                  autoComplete=\"off\"\n                />\n                <button type=\"submit\" disabled={!newMessage}>\n                  Send\n                </button>\n              </form>\n            </Reply>\n          </Route>\n          <Route path=\"/messaging/:uid\">\n            <PrivateChat db={db} />\n          </Route>\n        </Routes>\n      </Messages>\n    </>\n  );\n};\n\nexport default Channel;\n","import React, { useState, useEffect } from \"react\";\n// Components\nimport Button from \"./extensions/Button\";\n// firebase deps\n\nimport { Container } from \"./stylesMessaging\";\n\nimport Channel from \"./extensions/Channel\";\n\nimport firebase, { auth, db } from \"../../firebase\";\n\nfunction Messaging() {\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [initializing, setInitializing] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n    // Cleanup Subscription\n    return unsubscribe;\n  }, []);\n  const signInWithGoogle = async () => {\n    // Retrieve Google Provider object\n    const provider = new firebase.auth.GoogleAuthProvider();\n    // Set Language to the default browser preference\n    auth.useDeviceLanguage();\n    // Start sign in process\n    try {\n      await auth.signInWithPopup(provider);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  if (initializing) return \"Loading ...\";\n\n  return (\n    <Container>\n      <Channel user={user} db={db} />\n    </Container>\n  );\n}\n\nexport default Messaging;\n","import { auth } from \"../../../firebase\";\n\nexport default async function getCurrentUser() {\n  const getUser = new Promise((resolve, reject) => {\n    let user = auth.currentUser;\n    const unsub = auth.onAuthStateChanged((change) => {\n      if (change) user = change;\n      unsub();\n      resolve(user);\n    });\n  });\n\n  return await getUser;\n}\n","const httpRegex =\n  /(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*))/g;\n\nexport function isUrl(str) {\n  return str.match(httpRegex) ? true : false;\n}\n\nexport function splitString(string) {\n  const corrected = string.replaceAll(httpRegex, \"<url*>$1<url*>\");\n  const stringArr = corrected.split(\"<url*>\");\n  return stringArr;\n}\n\nexport function getExt(string) {\n  return /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(string);\n}\n","export function UserImage({ source }, props) {\n  return (\n    <img\n      src=\"/images/user.svg\"\n      alt=\"user image\"\n      srcSet={source ? `${source}, /images/user.svg` : \"/images/user.svg\"}\n      onError={(e) => {\n        e.target.removeAttribute(\"srcset\");\n        e.target.onError = null;\n      }}\n    />\n  );\n}\n"],"names":["Container","styled","Messengers","MessengersHeader","ActorsList","Messages","MessagesHeader","SelectedAct","Reply","ReplyText","StMessage","createdAt","text","displayName","photoURL","uid","textList","splitString","forEach","word","isUrl","getExt","push","image","url","className","source","to","seconds","formatRelative","Date","map","i","href","target","src","alt","onError","e","remove","StActorElement","ActorElement","name","lastMessage","Padronizer","sample1","sample2","this","result","str","test","sample","split","reduce","prev","char","is_numeric","Number","charCodeAt","getNums","bigger","Math","max","generateChatId","padronizer","padronize","Chat","chatId","chatPath","data","exists","payload","db","doc","collection","get","then","empty","message","add","catch","console","log","addReferenceTo","userid","ref","newChats","where","docs","chats","user","update","getUserFromId","PrivateChat","useState","newMessage","setNewMessage","scroller","useRef","params","useParams","hasNew","setHasNew","messages","setMessages","useEffect","getCurrentUser","orderBy","limit","onSnapshot","querySnapshot","id","current","element","scrollTop","scrollHeight","onSubmit","dUser","chatID","chat","chatExists","createChat","firebase","preventDefault","verifyMessages","type","value","onChange","placeholder","autoComplete","disabled","exact","path","auth","setUser","initializing","setInitializing","unsubscribe","getUser","Promise","resolve","reject","unsub","change","httpRegex","match","string","replaceAll","UserImage","props","srcSet","removeAttribute"],"sourceRoot":""}